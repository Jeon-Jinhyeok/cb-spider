basePath: /spider
definitions:
  spider.DiskInfo:
    properties:
      CreatedTime:
        description: The time when the disk was created
        type: string
      DiskSize:
        description: '"default", "50", "1000" (unit is GB)'
        example: "100"
        type: string
      DiskType:
        description: '"gp2", "Premium SSD", ...'
        example: gp2
        type: string
      IId:
        allOf:
        - $ref: '#/definitions/spider.IID'
        description: '{NameId, SystemId}'
      KeyValueList:
        description: Additional key-value pairs associated with this disk
        items:
          $ref: '#/definitions/spider.KeyValue'
        type: array
      OwnerVM:
        allOf:
        - $ref: '#/definitions/spider.IID'
        description: When the Status is DiskAttached
      Status:
        allOf:
        - $ref: '#/definitions/spider.DiskStatus'
        example: Available
      TagList:
        description: A list of tags associated with this disk
        items:
          $ref: '#/definitions/spider.KeyValue'
        type: array
      Zone:
        description: Target Zone Name
        example: us-east-1a
        type: string
    required:
    - CreatedTime
    - DiskSize
    - DiskType
    - IId
    - Status
    - Zone
    type: object
  spider.DiskStatus:
    enum:
    - Creating
    - Available
    - Attached
    - Deleting
    - Error
    type: string
    x-enum-varnames:
    - DiskCreating
    - DiskAvailable
    - DiskAttached
    - DiskDeleting
    - DiskError
  spider.IID:
    properties:
      NameId:
        example: user-defined-name
        type: string
      SystemId:
        example: csp-defined-id
        type: string
    required:
    - NameId
    - SystemId
    type: object
  spider.ImageType:
    enum:
    - PublicImage
    - MyImage
    type: string
    x-enum-varnames:
    - PublicImage
    - MyImage
  spider.KeyPairInfo:
    properties:
      Fingerprint:
        description: Unique identifier for the public key
        example: 3b:16:bf:1b:13:4b:b3:58:97:dc:72:19:45:bb:2c:8f
        type: string
      IId:
        allOf:
        - $ref: '#/definitions/spider.IID'
        description: '{NameId, SystemId}'
      KeyValueList:
        description: Additional metadata as key-value pairs
        items:
          $ref: '#/definitions/spider.KeyValue'
        type: array
      PrivateKey:
        description: Private part of the KeyPair
        example: '-----BEGIN PRIVATE KEY-----...'
        type: string
      PublicKey:
        description: Public part of the KeyPair
        example: ssh-rsa AAAAB3...
        type: string
      TagList:
        description: List of tags associated with this KeyPair
        items:
          $ref: '#/definitions/spider.KeyValue'
        type: array
      VMUserID:
        description: cb-user or Administrator
        example: cb-user
        type: string
    required:
    - IId
    type: object
  spider.KeyValue:
    properties:
      Key:
        example: key1
        type: string
      Value:
        example: value1
        type: string
    required:
    - Key
    type: object
  spider.Platform:
    enum:
    - LINUX/UNIX
    - WINDOWS
    type: string
    x-enum-varnames:
    - LINUX_UNIX
    - WINDOWS
  spider.RegionInfo:
    properties:
      Region:
        example: us-east-1
        type: string
      Zone:
        example: us-east-1a
        type: string
    required:
    - Region
    type: object
  spider.SecurityInfo:
    properties:
      IId:
        allOf:
        - $ref: '#/definitions/spider.IID'
        description: '{NameId, SystemId}'
      KeyValueList:
        items:
          $ref: '#/definitions/spider.KeyValue'
        type: array
      SecurityRules:
        items:
          $ref: '#/definitions/spider.SecurityRuleInfo'
        type: array
      TagList:
        items:
          $ref: '#/definitions/spider.KeyValue'
        type: array
      VpcIID:
        allOf:
        - $ref: '#/definitions/spider.IID'
        description: '{NameId, SystemId}'
    required:
    - IId
    - SecurityRules
    - VpcIID
    type: object
  spider.SecurityRuleInfo:
    properties:
      CIDR:
        description: if not specified, defaults to 0.0.0.0/0
        example: 0.0.0.0/0
        type: string
      Direction:
        description: inbound or outbound
        example: inbound
        type: string
      FromPort:
        description: 'TCP, UDP: 1~65535, ICMP, ALL: -1'
        example: "22"
        type: string
      IPProtocol:
        description: TCP, UDP, ICMP, ALL
        example: TCP
        type: string
      ToPort:
        description: 'TCP, UDP: 1~65535, ICMP, ALL: -1'
        example: "22"
        type: string
    required:
    - Direction
    - FromPort
    - IPProtocol
    - ToPort
    type: object
  spider.SubnetInfo:
    properties:
      IId:
        allOf:
        - $ref: '#/definitions/spider.IID'
        description: '{NameId, SystemId}'
      IPv4_CIDR:
        example: 10.0.8.0/22
        type: string
      KeyValueList:
        items:
          $ref: '#/definitions/spider.KeyValue'
        type: array
      TagList:
        items:
          $ref: '#/definitions/spider.KeyValue'
        type: array
      Zone:
        example: us-east-1a
        type: string
    required:
    - IId
    - IPv4_CIDR
    - Zone
    type: object
  spider.VMInfo:
    properties:
      AccessPoint:
        description: 10.2.3.2:22, 123.456.789.123:432
        example: 1.2.3.4:22
        type: string
      DataDiskIIDs:
        description: 'example:"[{NameId: ''datadisk-01'', SystemId: ''datadisk-12345678''}]"'
        items:
          $ref: '#/definitions/spider.IID'
        type: array
      IId:
        allOf:
        - $ref: '#/definitions/spider.IID'
        description: 'example:"{NameId: ''vm-01'', SystemId: ''i-12345678''}"'
      ImageIId:
        allOf:
        - $ref: '#/definitions/spider.IID'
        description: 'example:"{NameId: ''ami-12345678'', SystemId: ''ami-12345678''}"'
      ImageType:
        allOf:
        - $ref: '#/definitions/spider.ImageType'
        description: PublicImage | MyImage
        example: PublicImage
      KeyPairIId:
        allOf:
        - $ref: '#/definitions/spider.IID'
        description: 'example:"{NameId: ''keypair-01'', SystemId: ''keypair-12345678''}"'
      KeyValueList:
        description: 'example:"[{Key: ''Architecture'', Value: ''x86_64''}]"'
        items:
          $ref: '#/definitions/spider.KeyValue'
        type: array
      NetworkInterface:
        example: eni-12345678
        type: string
      Platform:
        allOf:
        - $ref: '#/definitions/spider.Platform'
        description: LINUX | WINDOWS
        example: LINUX
      PrivateDNS:
        example: ip-192-168-1-1.ec2.internal
        type: string
      PrivateIP:
        example: 192.168.1.1
        type: string
      PublicDNS:
        example: ec2-1-2-3-4.compute-1.amazonaws.com
        type: string
      PublicIP:
        example: 1.2.3.4
        type: string
      Region:
        allOf:
        - $ref: '#/definitions/spider.RegionInfo'
        description: 'example:"{Region: ''us-east-1'', Zone: ''us-east-1a''}"'
      RootDeviceName:
        description: '"/dev/sda1", ...'
        example: /dev/sda1
        type: string
      RootDiskSize:
        description: '"default", "50", "1000" (unit is GB)'
        example: "50"
        type: string
      RootDiskType:
        description: '"gp2", "Premium SSD", ...'
        example: gp2
        type: string
      SSHAccessPoint:
        description: Deprecated
        example: 10.2.3.2:22
        type: string
      SecurityGroupIIds:
        description: 'example:"[{NameId: ''sg-01'', SystemId: ''sg-12345678''}]"'
        items:
          $ref: '#/definitions/spider.IID'
        type: array
      StartTime:
        description: 'Timezone: based on cloud-barista server location.'
        example: "2024-08-27T10:00:00Z"
        type: string
      SubnetIID:
        allOf:
        - $ref: '#/definitions/spider.IID'
        description: 'example:"{NameId: ''subnet-01'', SystemId: ''subnet-12345678''}"'
      TagList:
        description: 'example:"[{Key: ''Name'', Value: ''MyVM''}]"'
        items:
          $ref: '#/definitions/spider.KeyValue'
        type: array
      VMBlockDisk:
        description: Deprecated soon
        example: /dev/sda2
        type: string
      VMBootDisk:
        description: Deprecated soon
        example: /dev/sda1
        type: string
      VMSpecName:
        description: instance type or flavour, etc... ex) t2.micro or f1.micro
        example: t2.micro
        type: string
      VMUserId:
        description: cb-user or Administrator
        example: cb-user
        type: string
      VMUserPasswd:
        description: Only for Windows
        example: password1234
        type: string
      VpcIID:
        allOf:
        - $ref: '#/definitions/spider.IID'
        description: 'example:"{NameId: ''vpc-01'', SystemId: ''vpc-12345678''}"'
    required:
    - AccessPoint
    - IId
    - ImageIId
    - ImageType
    - KeyPairIId
    - NetworkInterface
    - Platform
    - PrivateIP
    - PublicIP
    - Region
    - RootDeviceName
    - RootDiskSize
    - RootDiskType
    - SecurityGroupIIds
    - StartTime
    - SubnetIID
    - VMSpecName
    - VMUserId
    - VpcIID
    type: object
  spider.VMStatus:
    description: The status of a Virtual Machine (VM).
    enum:
    - Creating
    - Running
    - Suspending
    - Suspended
    - Resuming
    - Rebooting
    - Terminating
    - Terminated
    - NotExist
    - Failed
    type: string
    x-enum-comments:
      Creating: from launch to running
      NotExist: VM does not exist
      Rebooting: from running to running
      Resuming: from suspended to running
      Suspending: from running to suspended
      Terminating: from running, suspended to terminated
    x-enum-varnames:
    - Creating
    - Running
    - Suspending
    - Suspended
    - Resuming
    - Rebooting
    - Terminating
    - Terminated
    - NotExist
    - Failed
  spider.VMStatusInfo:
    properties:
      IId:
        allOf:
        - $ref: '#/definitions/spider.IID'
        description: '{NameId: ''vm-01'', SystemId: ''i-12345678''}"'
      VmStatus:
        allOf:
        - $ref: '#/definitions/spider.VMStatus'
        example: Running
    required:
    - IId
    - VmStatus
    type: object
  spider.VPCInfo:
    properties:
      IId:
        allOf:
        - $ref: '#/definitions/spider.IID'
        description: '{NameId, SystemId}'
      IPv4_CIDR:
        example: 10.0.0.0/16
        type: string
      KeyValueList:
        items:
          $ref: '#/definitions/spider.KeyValue'
        type: array
      SubnetInfoList:
        items:
          $ref: '#/definitions/spider.SubnetInfo'
        type: array
      TagList:
        items:
          $ref: '#/definitions/spider.KeyValue'
        type: array
    required:
    - IId
    - IPv4_CIDR
    - SubnetInfoList
    type: object
  spider.AddSubnetRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      IDTransformMode:
        description: 'ON: transform CSP ID, OFF: no-transform CSP ID'
        example: "ON"
        type: string
      ReqInfo:
        properties:
          IPv4_CIDR:
            example: 10.0.12.0/22
            type: string
          Name:
            example: subnet-01
            type: string
          TagList:
            items:
              $ref: '#/definitions/spider.KeyValue'
            type: array
          Zone:
            description: target zone for the subnet, if not specified, it will be
              created in the same zone as the Connection.
            example: us-east-1b
            type: string
        required:
        - IPv4_CIDR
        - Name
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.AllResourceListResponse:
    properties:
      AllList:
        properties:
          MappedList:
            items:
              $ref: '#/definitions/spider.IID'
            type: array
          OnlyCSPList:
            items:
              $ref: '#/definitions/spider.IID'
            type: array
          OnlySpiderList:
            items:
              $ref: '#/definitions/spider.IID'
            type: array
        required:
        - MappedList
        - OnlyCSPList
        - OnlySpiderList
        type: object
    required:
    - AllList
    type: object
  spider.BooleanInfo:
    properties:
      Result:
        description: true or false
        example: "true"
        type: string
    required:
    - Result
    type: object
  spider.ConnectionRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
    required:
    - ConnectionName
    type: object
  spider.CountResponse:
    properties:
      count:
        example: 5
        type: integer
    required:
    - count
    type: object
  spider.CreateVPCRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      IDTransformMode:
        description: 'ON: transform CSP ID, OFF: no-transform CSP ID'
        example: "ON"
        type: string
      ReqInfo:
        properties:
          IPv4_CIDR:
            description: Some CSPs unsupported VPC CIDR
            type: string
          Name:
            example: vpc-01
            type: string
          SubnetInfoList:
            items:
              properties:
                IPv4_CIDR:
                  example: 10.0.8.0/22
                  type: string
                Name:
                  example: subnet-01
                  type: string
                TagList:
                  items:
                    $ref: '#/definitions/spider.KeyValue'
                  type: array
                Zone:
                  description: target zone for the subnet, if not specified, it will
                    be created in the same zone as the Connection.
                  example: us-east-1b
                  type: string
              required:
              - IPv4_CIDR
              - Name
              type: object
            type: array
          TagList:
            items:
              $ref: '#/definitions/spider.KeyValue'
            type: array
        required:
        - Name
        - SubnetInfoList
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.DiskAttachRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      ReqInfo:
        properties:
          VMName:
            example: vm-01
            type: string
        required:
        - VMName
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.DiskCreateRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      IDTransformMode:
        description: 'ON: transform CSP ID, OFF: no-transform CSP ID'
        example: "ON"
        type: string
      ReqInfo:
        properties:
          DiskSize:
            description: 100 or default, if not specified, default is used (unit is
              GB)
            example: "100"
            type: string
          DiskType:
            description: gp2 or default, if not specified, default is used
            example: gp2
            type: string
          Name:
            example: disk-01
            type: string
          TagList:
            items:
              $ref: '#/definitions/spider.KeyValue'
            type: array
          Zone:
            description: target zone for the disk, if not specified, it will be created
              in the same zone as the Connection.
            example: us-east-1b
            type: string
        required:
        - DiskSize
        - DiskType
        - Name
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.DiskDetachRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      ReqInfo:
        properties:
          VMName:
            example: vm-01
            type: string
        required:
        - VMName
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.DiskListResponse:
    properties:
      disk:
        items:
          $ref: '#/definitions/spider.DiskInfo'
        type: array
    required:
    - disk
    type: object
  spider.DiskRegisterRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      ReqInfo:
        properties:
          CSPId:
            example: csp-disk-1234
            type: string
          Name:
            example: disk-01
            type: string
          Zone:
            example: us-east-1b
            type: string
        required:
        - CSPId
        - Name
        - Zone
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.GetSGOwnerVPCRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      ReqInfo:
        properties:
          CSPId:
            example: csp-sg-1234
            type: string
        required:
        - CSPId
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.IncreaseDiskSizeRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      ReqInfo:
        properties:
          Size:
            example: "150"
            type: string
        required:
        - Size
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.KeyCreateRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      IDTransformMode:
        description: 'ON: transform CSP ID, OFF: no-transform CSP ID'
        example: "ON"
        type: string
      ReqInfo:
        properties:
          Name:
            example: keypair-01
            type: string
          TagList:
            items:
              $ref: '#/definitions/spider.KeyValue'
            type: array
        required:
        - Name
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.KeyListResponse:
    properties:
      keypair:
        items:
          $ref: '#/definitions/spider.KeyPairInfo'
        type: array
    type: object
  spider.KeyRegisterRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      ReqInfo:
        properties:
          CSPId:
            example: csp-key-1234
            type: string
          Name:
            example: keypair-01
            type: string
        required:
        - CSPId
        - Name
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.ListSecurityResponse:
    properties:
      securitygroup:
        items:
          $ref: '#/definitions/spider.SecurityInfo'
        type: array
    required:
    - securitygroup
    type: object
  spider.ListVPCResponse:
    properties:
      vpc:
        items:
          $ref: '#/definitions/spider.VPCInfo'
        type: array
    required:
    - vpc
    type: object
  spider.RuleControlRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      ReqInfo:
        properties:
          RuleInfoList:
            items:
              properties:
                CIDR:
                  example: 0.0.0.0/0(default)
                  type: string
                Direction:
                  example: inbound
                  type: string
                FromPort:
                  example: "22"
                  type: string
                IPProtocol:
                  example: TCP
                  type: string
                ToPort:
                  example: "22"
                  type: string
              required:
              - Direction
              - FromPort
              - IPProtocol
              - ToPort
              type: object
            type: array
        required:
        - RuleInfoList
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.SecurityGroupCreateRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      IDTransformMode:
        description: 'ON: transform CSP ID, OFF: no-transform CSP ID'
        example: "ON"
        type: string
      ReqInfo:
        properties:
          Name:
            example: sg-01
            type: string
          SecurityRules:
            items:
              $ref: '#/definitions/spider.SecurityRuleInfo'
            type: array
          TagList:
            items:
              $ref: '#/definitions/spider.KeyValue'
            type: array
          VPCName:
            example: vpc-01
            type: string
        required:
        - Name
        - SecurityRules
        - VPCName
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.SecurityGroupRegisterRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      ReqInfo:
        properties:
          CSPId:
            example: csp-sg-1234
            type: string
          Name:
            example: sg-01
            type: string
          VPCName:
            example: vpc-01
            type: string
        required:
        - CSPId
        - Name
        - VPCName
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.SimpleMsg:
    properties:
      message:
        example: Any message
        type: string
    required:
    - message
    type: object
  spider.SubnetRegisterRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      ReqInfo:
        properties:
          CSPId:
            example: csp-subnet-1234
            type: string
          Name:
            example: subnet-01
            type: string
          VPCName:
            example: vpc-01
            type: string
          Zone:
            example: us-east-1a
            type: string
        required:
        - CSPId
        - Name
        - VPCName
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.SubnetUnregisterRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      ReqInfo:
        properties:
          VPCName:
            example: vpc-01
            type: string
        required:
        - VPCName
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.VMListResponse:
    properties:
      vm:
        items:
          $ref: '#/definitions/spider.VMInfo'
        type: array
    required:
    - vm
    type: object
  spider.VMListStatusResponse:
    properties:
      vmstatus:
        items:
          $ref: '#/definitions/spider.VMStatusInfo'
        type: array
    required:
    - vmstatus
    type: object
  spider.VMRegisterRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      ReqInfo:
        properties:
          CSPId:
            example: csp-vm-1234
            type: string
          Name:
            example: vm-01
            type: string
        required:
        - CSPId
        - Name
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.VMStartRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      IDTransformMode:
        description: 'ON: transform CSP ID, OFF: no-transform CSP ID'
        example: "ON"
        type: string
      ReqInfo:
        properties:
          DataDiskNames:
            description: Data disks in the same zone as this VM
            example:
            - data-disk-01
            - ' data-disk-02'
            items:
              type: string
            type: array
          ImageName:
            example: ami-12345678
            type: string
          ImageType:
            description: PublicImage or MyImage
            example: PublicImage
            type: string
          KeyPairName:
            example: keypair-01
            type: string
          Name:
            example: vm-01
            type: string
          RootDiskSize:
            description: 100 or default, if not specified, default is used (unit is
              GB)
            example: "30"
            type: string
          RootDiskType:
            description: gp2 or default, if not specified, default is used
            example: gp2
            type: string
          SecurityGroupNames:
            example:
            - sg-01
            - sg-02
            items:
              type: string
            type: array
          SubnetName:
            example: subnet-01
            type: string
          TagList:
            items:
              $ref: '#/definitions/spider.KeyValue'
            type: array
          VMSpecName:
            example: t2.micro
            type: string
          VMUserId:
            description: Administrator, Windows Only
            example: Administrator
            type: string
          VMUserPasswd:
            description: Windows Only
            example: password1234
            type: string
          VPCName:
            example: vpc-01
            type: string
        required:
        - ImageName
        - ImageType
        - KeyPairName
        - Name
        - SecurityGroupNames
        - SubnetName
        - VMSpecName
        - VPCName
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.VMStatusResponse:
    properties:
      Status:
        allOf:
        - $ref: '#/definitions/spider.VMStatus'
        example: Running
    required:
    - Status
    type: object
  spider.VMUsingResources:
    properties:
      Resources:
        properties:
          SGList:
            description: 'example:"[{NameId: ''sg-01'', SystemId: ''sg-12345678''}]"'
            items:
              $ref: '#/definitions/spider.IID'
            type: array
          VMKey:
            allOf:
            - $ref: '#/definitions/spider.IID'
            description: 'example:"{NameId: ''keypair-01'', SystemId: ''keypair-12345678''}"'
          VPC:
            allOf:
            - $ref: '#/definitions/spider.IID'
            description: 'example:"{NameId: ''vpc-01'', SystemId: ''vpc-12345678''}"'
        required:
        - SGList
        - VPC
        type: object
    required:
    - Resources
    type: object
  spider.VPCRegisterRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      ReqInfo:
        properties:
          CSPId:
            example: csp-vpc-1234
            type: string
          Name:
            example: vpc-01
            type: string
        required:
        - CSPId
        - Name
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
host: localhost:1024
info:
  contact:
    email: contact-to-cloud-barista@googlegroups.com
    name: API Support
    url: http://cloud-barista.github.io
  description: CB-Spider REST API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: CB-Spider REST API
  version: latest
paths:
  /alldisk:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all Disks across all connections.
      operationId: list-all-disk
      parameters:
      - description: The name of the Connection
        in: query
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of all Disks with their respective lists
          schema:
            $ref: '#/definitions/spider.AllResourceListResponse'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List All Disks
      tags:
      - '[Disk management]'
  /allkeypair:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all KeyPairs across all connections.
      operationId: list-all-key
      parameters:
      - description: The name of the Connection
        in: query
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of all KeyPairs with their respective lists
          schema:
            $ref: '#/definitions/spider.AllResourceListResponse'
        "400":
          description: Bad Request, possibly due to invalid query parameter
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List All KeyPairs
      tags:
      - '[KeyPair management]'
  /allsecuritygroup:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all Security Groups across all connections.
      operationId: list-all-securitygroups
      parameters:
      - description: The name of the Connection
        in: query
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of all SecurityGroups with their respective lists
          schema:
            $ref: '#/definitions/spider.AllResourceListResponse'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List All SecurityGroups
      tags:
      - '[SecurityGroup management]'
  /allvm:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all Virtual Machines (VMs) across all connections.
      operationId: list-all-vm
      parameters:
      - description: The name of the Connection
        in: query
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of all VMs with their respective lists
          schema:
            $ref: '#/definitions/spider.AllResourceListResponse'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List All VMs
      tags:
      - '[VM management]'
  /allvpc:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all Virtual Private Clouds (VPCs) across all
        connections.
      operationId: list-all-vpc
      parameters:
      - description: The name of the Connection
        in: query
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of all VPCs with their respective lists
          schema:
            $ref: '#/definitions/spider.AllResourceListResponse'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List All VPCs
      tags:
      - '[VPC management]'
  /controlvm/{Name}:
    put:
      consumes:
      - application/json
      description: Control the state of a Virtual Machine (VM) such as suspend, resume,
        or reboot.
      operationId: control-vm
      parameters:
      - description: Request body for controlling a VM
        in: body
        name: ConnectionRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ConnectionRequest'
      - description: The name of the VM to control
        in: path
        name: Name
        required: true
        type: string
      - description: The action to perform on the VM (suspend, resume, reboot)
        in: query
        name: action
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the control operation
          schema:
            $ref: '#/definitions/spider.VMStatusResponse'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Control VM
      tags:
      - '[VM management]'
  /countdisk:
    get:
      description: Get the total number of Disks across all connections.
      operationId: count-all-disks
      produces:
      - application/json
      responses:
        "200":
          description: Total count of Disks
          schema:
            $ref: '#/definitions/spider.CountResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Count All Disks
      tags:
      - '[Disk management]'
  /countdisk/{ConnectionName}:
    get:
      description: Get the total number of Disks for a specific connection.
      operationId: count-disks-by-connection
      parameters:
      - description: The name of the Connection
        in: path
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Total count of Disks for the connection
          schema:
            $ref: '#/definitions/spider.CountResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Count Disks by Connection
      tags:
      - '[Disk management]'
  /countkeypair:
    get:
      description: Get the total number of KeyPairs across all connections.
      operationId: count-all-keys
      produces:
      - application/json
      responses:
        "200":
          description: Total count of KeyPairs
          schema:
            $ref: '#/definitions/spider.CountResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Count All KeyPairs
      tags:
      - '[KeyPair management]'
  /countkeypair/{ConnectionName}:
    get:
      description: Get the total number of KeyPairs for a specific connection.
      operationId: count-keys-by-connection
      parameters:
      - description: The name of the Connection
        in: path
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Total count of KeyPairs for the connection
          schema:
            $ref: '#/definitions/spider.CountResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Count KeyPairs by Connection
      tags:
      - '[KeyPair management]'
  /countsecuritygroup:
    get:
      description: Get the total number of Security Groups across all connections.
      operationId: count-all-securitygroups
      produces:
      - application/json
      responses:
        "200":
          description: Total count of SecurityGroups
          schema:
            $ref: '#/definitions/spider.CountResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Count All SecurityGroups
      tags:
      - '[SecurityGroup management]'
  /countsecuritygroup/{ConnectionName}:
    get:
      description: Get the total number of Security Groups for a specific connection.
      operationId: count-securitygroups-by-connection
      parameters:
      - description: The name of the Connection
        in: path
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Total count of SecurityGroups for the connection
          schema:
            $ref: '#/definitions/spider.CountResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Count SecurityGroups by Connection
      tags:
      - '[SecurityGroup management]'
  /countsubnet:
    get:
      description: Get the total number of Subnets across all connections.
      operationId: count-all-subnets
      produces:
      - application/json
      responses:
        "200":
          description: Total count of Subnets
          schema:
            $ref: '#/definitions/spider.CountResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Count All Subnets
      tags:
      - '[VPC management]'
  /countsubnet/{ConnectionName}:
    get:
      description: Get the total number of Subnets for a specific connection.
      operationId: count-subnets-by-connection
      parameters:
      - description: The name of the Connection
        in: path
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Total count of Subnets for the connection
          schema:
            $ref: '#/definitions/spider.CountResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Count Subnets by Connection
      tags:
      - '[VPC management]'
  /countvm:
    get:
      description: Get the total number of Virtual Machines (VMs) across all connections.
      operationId: count-all-vms
      produces:
      - application/json
      responses:
        "200":
          description: Total count of VMs
          schema:
            $ref: '#/definitions/spider.CountResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Count All VMs
      tags:
      - '[VM management]'
  /countvm/{ConnectionName}:
    get:
      description: Get the total number of Virtual Machines (VMs) for a specific connection.
      operationId: count-vms-by-connection
      parameters:
      - description: The name of the Connection
        in: path
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Total count of VMs for the connection
          schema:
            $ref: '#/definitions/spider.CountResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Count VMs by Connection
      tags:
      - '[VM management]'
  /countvpc:
    get:
      description: Get the total number of VPCs across all connections.
      operationId: count-all-vpcs
      produces:
      - application/json
      responses:
        "200":
          description: Total count of VPCs
          schema:
            $ref: '#/definitions/spider.CountResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Count All VPCs
      tags:
      - '[VPC management]'
  /countvpc/{ConnectionName}:
    get:
      description: Get the total number of VPCs for a specific connection.
      operationId: count-vpcs-by-connection
      parameters:
      - description: The name of the Connection
        in: path
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Total count of VPCs for the connection
          schema:
            $ref: '#/definitions/spider.CountResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Count VPCs by Connection
      tags:
      - '[VPC management]'
  /cspdisk/{Id}:
    delete:
      consumes:
      - application/json
      description: Delete a specified CSP Disk.
      operationId: delete-csp-disk
      parameters:
      - description: Request body for deleting a CSP Disk
        in: body
        name: ConnectionRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ConnectionRequest'
      - description: The CSP Disk ID to delete
        in: path
        name: Id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the delete operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Delete CSP Disk
      tags:
      - '[Disk management]'
  /cspkeypair/{Id}:
    delete:
      consumes:
      - application/json
      description: Delete a specified CSP KeyPair.
      operationId: delete-csp-key
      parameters:
      - description: Request body for deleting a CSP KeyPair
        in: body
        name: ConnectionRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ConnectionRequest'
      - description: The CSP KeyPair ID to delete
        in: path
        name: Id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the delete operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Delete CSP KeyPair
      tags:
      - '[KeyPair management]'
  /cspsecuritygroup/{Id}:
    delete:
      consumes:
      - application/json
      description: Delete a specified CSP Security Group.
      operationId: delete-csp-securitygroup
      parameters:
      - description: Request body for deleting a CSP SecurityGroup
        in: body
        name: ConnectionRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ConnectionRequest'
      - description: The CSP SecurityGroup ID to delete
        in: path
        name: Id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the delete operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Delete CSP SecurityGroup
      tags:
      - '[SecurityGroup management]'
  /cspvm/{Id}:
    delete:
      consumes:
      - application/json
      description: Terminate a specified CSP Virtual Machine (VM).
      operationId: terminate-csp-vm
      parameters:
      - description: Request body for terminating a CSP VM
        in: body
        name: ConnectionRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ConnectionRequest'
      - description: The CSP VM ID to terminate
        in: path
        name: Id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the terminate operation
          schema:
            $ref: '#/definitions/spider.VMStatusResponse'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Terminate CSP VM
      tags:
      - '[VM management]'
    get:
      consumes:
      - application/json
      description: Retrieve details of a specific CSP Virtual Machine (VM).
      operationId: get-csp-vm
      parameters:
      - description: The name of the Connection to get a CSP VM for
        in: query
        name: ConnectionName
        required: true
        type: string
      - description: The CSP VM ID to retrieve
        in: path
        name: Id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of the CSP VM
          schema:
            $ref: '#/definitions/spider.VMInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Get CSP VM
      tags:
      - '[VM management]'
  /cspvpc/{Id}:
    delete:
      consumes:
      - application/json
      description: Delete a specified CSP Virtual Private Cloud (VPC).
      operationId: delete-csp-vpc
      parameters:
      - description: Request body for deleting a CSP VPC
        in: body
        name: ConnectionRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ConnectionRequest'
      - description: The CSP VPC ID to delete
        in: path
        name: Id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the delete operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Delete CSP VPC
      tags:
      - '[VPC management]'
  /disk:
    get:
      consumes:
      - application/json
      description: Retrieve a list of Disks associated with a specific connection.
      operationId: list-disk
      parameters:
      - description: The name of the Connection to list Disks for
        in: query
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of Disks
          schema:
            $ref: '#/definitions/spider.DiskListResponse'
        "400":
          description: Bad Request, possibly due to invalid query parameter
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List Disks
      tags:
      - '[Disk management]'
    post:
      consumes:
      - application/json
      description: Create a new Disk with the specified configuration.
      operationId: create-disk
      parameters:
      - description: Request body for creating a Disk
        in: body
        name: DiskCreateRequest
        required: true
        schema:
          $ref: '#/definitions/spider.DiskCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the created Disk
          schema:
            $ref: '#/definitions/spider.DiskInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Create Disk
      tags:
      - '[Disk management]'
  /disk/{Name}:
    delete:
      consumes:
      - application/json
      description: Delete a specified Disk.
      operationId: delete-disk
      parameters:
      - description: Request body for deleting a Disk
        in: body
        name: ConnectionRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ConnectionRequest'
      - description: The name of the Disk to delete
        in: path
        name: Name
        required: true
        type: string
      - description: Force delete the Disk
        in: query
        name: force
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the delete operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Delete Disk
      tags:
      - '[Disk management]'
    get:
      consumes:
      - application/json
      description: Retrieve details of a specific Disk.
      operationId: get-disk
      parameters:
      - description: The name of the Connection to get a Disk for
        in: query
        name: ConnectionName
        required: true
        type: string
      - description: The name of the Disk to retrieve
        in: path
        name: Name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of the Disk
          schema:
            $ref: '#/definitions/spider.DiskInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Get Disk
      tags:
      - '[Disk management]'
  /disk/{Name}/attach:
    put:
      consumes:
      - application/json
      description: Attach an existing Disk to a VM.
      operationId: attach-disk
      parameters:
      - description: Request body for attaching a Disk to a VM
        in: body
        name: DiskAttachRequest
        required: true
        schema:
          $ref: '#/definitions/spider.DiskAttachRequest'
      - description: The name of the Disk to attach
        in: path
        name: Name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of the attached Disk
          schema:
            $ref: '#/definitions/spider.DiskInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Attach Disk
      tags:
      - '[Disk management]'
  /disk/{Name}/detach:
    put:
      consumes:
      - application/json
      description: Detach an existing Disk from a VM.
      operationId: detach-disk
      parameters:
      - description: Request body for detaching a Disk from a VM
        in: body
        name: DiskDetachRequest
        required: true
        schema:
          $ref: '#/definitions/spider.DiskDetachRequest'
      - description: The name of the Disk to detach
        in: path
        name: Name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the detach operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Detach Disk
      tags:
      - '[Disk management]'
  /disk/{Name}/size:
    put:
      consumes:
      - application/json
      description: Increase the size of an existing disk.
      operationId: increase-disk-size
      parameters:
      - description: Request body for increasing the Disk size
        in: body
        name: IncreaseDiskSizeRequest
        required: true
        schema:
          $ref: '#/definitions/spider.IncreaseDiskSizeRequest'
      - description: The name of the Disk to increase the size for
        in: path
        name: Name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the size increase operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Increase Disk Size
      tags:
      - '[Disk management]'
  /getsecuritygroupowner:
    post:
      consumes:
      - application/json
      description: Retrieve the owner VPC of a specified Security Group.
      operationId: get-sg-owner-vpc
      parameters:
      - description: Request body for getting Security Group Owner VPC
        in: body
        name: GetSGOwnerVPCRequest
        required: true
        schema:
          $ref: '#/definitions/spider.GetSGOwnerVPCRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the owner VPC
          schema:
            $ref: '#/definitions/spider.IID'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Get Security Group Owner VPC
      tags:
      - '[VPC management]'
  /getvmusingresources:
    get:
      consumes:
      - application/json
      description: Retrieve details of a VM using resource ID.
      operationId: get-vm-using-rs
      parameters:
      - description: Connection name for the VM
        in: query
        name: ConnectionName
        required: true
        type: string
      - description: CSP ID of the VM
        in: query
        name: CSPId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of the VM using resource
          schema:
            $ref: '#/definitions/spider.VMUsingResources'
        "400":
          description: Bad Request, possibly due to invalid query parameters
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Get VM Using Resource
      tags:
      - '[VM management]'
  /keypair:
    get:
      consumes:
      - application/json
      description: Retrieve a list of KeyPairs associated with a specific connection.
      operationId: list-key
      parameters:
      - description: The name of the Connection to list KeyPairs for
        in: query
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of KeyPairs
          schema:
            $ref: '#/definitions/spider.KeyListResponse'
        "400":
          description: Bad Request, possibly due to invalid query parameter
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List KeyPairs
      tags:
      - '[KeyPair management]'
    post:
      consumes:
      - application/json
      description: Create a new KeyPair with the specified configurations.
      operationId: create-key
      parameters:
      - description: Request body for creating a KeyPair
        in: body
        name: KeyCreateRequest
        required: true
        schema:
          $ref: '#/definitions/spider.KeyCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the created KeyPair
          schema:
            $ref: '#/definitions/spider.KeyPairInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Create KeyPair
      tags:
      - '[KeyPair management]'
  /keypair/{Name}:
    delete:
      consumes:
      - application/json
      description: Delete a specified KeyPair.
      operationId: delete-key
      parameters:
      - description: Request body for deleting a KeyPair
        in: body
        name: ConnectionRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ConnectionRequest'
      - description: The name of the KeyPair to delete
        in: path
        name: Name
        required: true
        type: string
      - description: Force delete the KeyPair
        in: query
        name: force
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the delete operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Delete KeyPair
      tags:
      - '[KeyPair management]'
    get:
      consumes:
      - application/json
      description: Retrieve details of a specific KeyPair.
      operationId: get-key
      parameters:
      - description: The name of the Connection to get a KeyPair for
        in: query
        name: ConnectionName
        required: true
        type: string
      - description: The name of the KeyPair to retrieve
        in: path
        name: Name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of the KeyPair
          schema:
            $ref: '#/definitions/spider.KeyPairInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Get KeyPair
      tags:
      - '[KeyPair management]'
  /regdisk:
    post:
      consumes:
      - application/json
      description: Register a new Disk with the specified name, zone, and CSP ID.
      operationId: register-disk
      parameters:
      - description: Request body for registering a Disk
        in: body
        name: DiskRegisterRequest
        required: true
        schema:
          $ref: '#/definitions/spider.DiskRegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the registered Disk
          schema:
            $ref: '#/definitions/spider.DiskInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Register Disk
      tags:
      - '[Disk management]'
  /regdisk/{Name}:
    delete:
      consumes:
      - application/json
      description: Unregister a Disk with the specified name.
      operationId: unregister-disk
      parameters:
      - description: Request body for unregistering a Disk
        in: body
        name: ConnectionRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ConnectionRequest'
      - description: The name of the Disk to unregister
        in: path
        name: Name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the unregister operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Unregister Disk
      tags:
      - '[Disk management]'
  /regkeypair:
    post:
      consumes:
      - application/json
      description: Register a new KeyPair with the specified name and CSP ID.
      operationId: register-key
      parameters:
      - description: Request body for registering a KeyPair
        in: body
        name: KeyRegisterRequest
        required: true
        schema:
          $ref: '#/definitions/spider.KeyRegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the registered KeyPair
          schema:
            $ref: '#/definitions/spider.KeyPairInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Register KeyPair
      tags:
      - '[KeyPair management]'
  /regkeypair/{Name}:
    delete:
      consumes:
      - application/json
      description: Unregister a KeyPair with the specified name.
      operationId: unregister-key
      parameters:
      - description: Request body for unregistering a KeyPair
        in: body
        name: ConnectionRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ConnectionRequest'
      - description: The name of the KeyPair to unregister
        in: path
        name: Name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the unregister operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Unregister KeyPair
      tags:
      - '[KeyPair management]'
  /regsecuritygroup:
    post:
      consumes:
      - application/json
      description: Register a new Security Group with the specified name and CSP ID.
      operationId: register-securitygroup
      parameters:
      - description: Request body for registering a SecurityGroup
        in: body
        name: SecurityGroupRegisterRequest
        required: true
        schema:
          $ref: '#/definitions/spider.SecurityGroupRegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the registered SecurityGroup
          schema:
            $ref: '#/definitions/spider.SecurityInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Register SecurityGroup
      tags:
      - '[SecurityGroup management]'
  /regsecuritygroup/{Name}:
    delete:
      consumes:
      - application/json
      description: Unregister a Security Group with the specified name.
      operationId: unregister-securitygroup
      parameters:
      - description: Request body for unregistering a SecurityGroup
        in: body
        name: ConnectionRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ConnectionRequest'
      - description: The name of the SecurityGroup to unregister
        in: path
        name: Name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the unregister operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Unregister SecurityGroup
      tags:
      - '[SecurityGroup management]'
  /regsubnet:
    post:
      consumes:
      - application/json
      description: Register a new Subnet within a specified VPC.
      operationId: register-subnet
      parameters:
      - description: Request body for registering a Subnet
        in: body
        name: SubnetRegisterRequest
        required: true
        schema:
          $ref: '#/definitions/spider.SubnetRegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the VPC including the registered Subnet
          schema:
            $ref: '#/definitions/spider.VPCInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Register Subnet
      tags:
      - '[VPC management]'
  /regsubnet/{Name}:
    delete:
      consumes:
      - application/json
      description: Unregister a Subnet from a specified VPC.
      operationId: unregister-subnet
      parameters:
      - description: Request body for unregistering a Subnet
        in: body
        name: SubnetUnregisterRequest
        required: true
        schema:
          $ref: '#/definitions/spider.SubnetUnregisterRequest'
      - description: The name of the Subnet to unregister
        in: path
        name: Name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the unregister operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Unregister Subnet
      tags:
      - '[VPC management]'
  /regvm:
    post:
      consumes:
      - application/json
      description: Register a new Virtual Machine (VM) with the specified name and
        CSP ID.
      operationId: register-vm
      parameters:
      - description: Request body for registering a VM
        in: body
        name: VMRegisterRequest
        required: true
        schema:
          $ref: '#/definitions/spider.VMRegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the registered VM
          schema:
            $ref: '#/definitions/spider.VMInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Register VM
      tags:
      - '[VM management]'
  /regvm/{Name}:
    delete:
      consumes:
      - application/json
      description: Unregister a Virtual Machine (VM) with the specified name.
      operationId: unregister-vm
      parameters:
      - description: Request body for unregistering a VM
        in: body
        name: ConnectionRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ConnectionRequest'
      - description: The name of the VM to unregister
        in: path
        name: Name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the unregister operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Unregister VM
      tags:
      - '[VM management]'
  /regvpc:
    post:
      consumes:
      - application/json
      description: Register a new Virtual Private Cloud (VPC) with the specified name
        and CSP ID.
      operationId: register-vpc
      parameters:
      - description: Request body for registering a VPC
        in: body
        name: VPCRegisterRequest
        required: true
        schema:
          $ref: '#/definitions/spider.VPCRegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the registered VPC
          schema:
            $ref: '#/definitions/spider.VPCInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Register VPC
      tags:
      - '[VPC management]'
  /regvpc/{Name}:
    delete:
      consumes:
      - application/json
      description: Unregister a VPC with the specified name.
      operationId: unregister-vpc
      parameters:
      - description: Request body for unregistering a VPC
        in: body
        name: ConnectionRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ConnectionRequest'
      - description: The name of the VPC to unregister
        in: path
        name: Name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the unregister operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Unregister VPC
      tags:
      - '[VPC management]'
  /securitygroup:
    get:
      consumes:
      - application/json
      description: Retrieve a list of Security Groups associated with a specific connection.
      operationId: list-securitygroup
      parameters:
      - description: The name of the Connection to list SecurityGroups for
        in: query
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of SecurityGroups
          schema:
            $ref: '#/definitions/spider.ListSecurityResponse'
        "400":
          description: Bad Request, possibly due to invalid query parameter
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List SecurityGroups
      tags:
      - '[SecurityGroup management]'
    post:
      consumes:
      - application/json
      description: Create a new Security Group with specified rules and tags.
      operationId: create-securitygroup
      parameters:
      - description: Request body for creating a SecurityGroup
        in: body
        name: SecurityGroupCreateRequest
        required: true
        schema:
          $ref: '#/definitions/spider.SecurityGroupCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the created SecurityGroup
          schema:
            $ref: '#/definitions/spider.SecurityInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Create SecurityGroup
      tags:
      - '[SecurityGroup management]'
  /securitygroup/{Name}:
    delete:
      consumes:
      - application/json
      description: Delete a specified Security Group.
      operationId: delete-securitygroup
      parameters:
      - description: Request body for deleting a SecurityGroup
        in: body
        name: ConnectionRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ConnectionRequest'
      - description: The name of the SecurityGroup to delete
        in: path
        name: Name
        required: true
        type: string
      - description: Force delete the SecurityGroup
        in: query
        name: force
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the delete operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Delete SecurityGroup
      tags:
      - '[SecurityGroup management]'
    get:
      consumes:
      - application/json
      description: Retrieve details of a specific Security Group.
      operationId: get-securitygroup
      parameters:
      - description: The name of the Connection to get a SecurityGroup for
        in: query
        name: ConnectionName
        required: true
        type: string
      - description: The name of the SecurityGroup to retrieve
        in: path
        name: Name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of the SecurityGroup
          schema:
            $ref: '#/definitions/spider.SecurityInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Get SecurityGroup
      tags:
      - '[SecurityGroup management]'
  /securitygroup/{SGName}/rules:
    delete:
      consumes:
      - application/json
      description: Remove existing rules from a Security Group.
      operationId: remove-rules-securitygroup
      parameters:
      - description: The name of the SecurityGroup to remove rules from
        in: path
        name: SGName
        required: true
        type: string
      - description: Request body for removing rules
        in: body
        name: RuleControlRequest
        required: true
        schema:
          $ref: '#/definitions/spider.RuleControlRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Result of the remove operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Remove Rules from SecurityGroup
      tags:
      - '[SecurityGroup management]'
    post:
      consumes:
      - application/json
      description: Add new rules to a Security Group.
      operationId: add-rules-securitygroup
      parameters:
      - description: The name of the SecurityGroup to add rules to
        in: path
        name: SGName
        required: true
        type: string
      - description: Request body for adding rules
        in: body
        name: RuleControlRequest
        required: true
        schema:
          $ref: '#/definitions/spider.RuleControlRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the SecurityGroup after adding rules
          schema:
            $ref: '#/definitions/spider.SecurityInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Add Rules to SecurityGroup
      tags:
      - '[SecurityGroup management]'
  /vm:
    get:
      consumes:
      - application/json
      description: Retrieve a list of Virtual Machines (VMs) associated with a specific
        connection.
      operationId: list-vm
      parameters:
      - description: The name of the Connection to list VMs for
        in: query
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of VMs
          schema:
            $ref: '#/definitions/spider.VMListResponse'
        "400":
          description: Bad Request, possibly due to invalid query parameter
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List VMs
      tags:
      - '[VM management]'
    post:
      consumes:
      - application/json
      description: Start a new Virtual Machine (VM) with specified configurations.
      operationId: start-vm
      parameters:
      - description: Request body for starting a VM
        in: body
        name: VMStartRequest
        required: true
        schema:
          $ref: '#/definitions/spider.VMStartRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the started VM
          schema:
            $ref: '#/definitions/spider.VMInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Start VM
      tags:
      - '[VM management]'
  /vm/{Name}:
    delete:
      consumes:
      - application/json
      description: Terminate a specified Virtual Machine (VM).
      operationId: terminate-vm
      parameters:
      - description: Request body for terminating a VM
        in: body
        name: ConnectionRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ConnectionRequest'
      - description: The name of the VM to terminate
        in: path
        name: Name
        required: true
        type: string
      - description: Force terminate the VM
        in: query
        name: force
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the terminate operation
          schema:
            $ref: '#/definitions/spider.VMStatusResponse'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Terminate VM
      tags:
      - '[VM management]'
    get:
      consumes:
      - application/json
      description: Retrieve details of a specific Virtual Machine (VM).
      operationId: get-vm
      parameters:
      - description: The name of the Connection to get a VM for
        in: query
        name: ConnectionName
        required: true
        type: string
      - description: The name of the VM to retrieve
        in: path
        name: Name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of the VM
          schema:
            $ref: '#/definitions/spider.VMInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Get VM
      tags:
      - '[VM management]'
  /vmstatus:
    get:
      consumes:
      - application/json
      description: Retrieve a list of statuses for Virtual Machines (VMs) associated
        with a specific connection.
      operationId: list-vm-status
      parameters:
      - description: The name of the Connection to list VM statuses for
        in: query
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of VM statuses
          schema:
            $ref: '#/definitions/spider.VMListStatusResponse'
        "400":
          description: Bad Request, possibly due to invalid query parameter
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List VM Statuses
      tags:
      - '[VM management]'
  /vmstatus/{Name}:
    get:
      consumes:
      - application/json
      description: Retrieve the status of a specific Virtual Machine (VM).
      operationId: get-vm-status
      parameters:
      - description: The name of the Connection to get a VM status for
        in: query
        name: ConnectionName
        required: true
        type: string
      - description: The name of the VM to retrieve the status of
        in: path
        name: Name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of the VM status
          schema:
            $ref: '#/definitions/spider.VMStatusResponse'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Get VM Status
      tags:
      - '[VM management]'
  /vpc:
    get:
      consumes:
      - application/json
      description: Retrieve a list of Virtual Private Clouds (VPCs) associated with
        a specific connection.
      operationId: list-vpc
      parameters:
      - description: The name of the Connection to list VPCs for
        in: query
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of VPCs
          schema:
            $ref: '#/definitions/spider.ListVPCResponse'
        "400":
          description: Bad Request, possibly due to invalid query parameter
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List VPCs
      tags:
      - '[VPC management]'
    post:
      consumes:
      - application/json
      description: Create a new Virtual Private Cloud (VPC) with specified subnet
        configurations.
      operationId: create-vpc
      parameters:
      - description: Request body for creating a VPC
        in: body
        name: CreateVPCRequest
        required: true
        schema:
          $ref: '#/definitions/spider.CreateVPCRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the created VPC
          schema:
            $ref: '#/definitions/spider.VPCInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Create VPC
      tags:
      - '[VPC management]'
  /vpc/{Name}:
    delete:
      consumes:
      - application/json
      description: Delete a specified Virtual Private Cloud (VPC).
      operationId: delete-vpc
      parameters:
      - description: Request body for deleting a VPC
        in: body
        name: ConnectionRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ConnectionRequest'
      - description: The name of the VPC to delete
        in: path
        name: Name
        required: true
        type: string
      - description: Force delete the VPC
        in: query
        name: force
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the delete operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Delete VPC
      tags:
      - '[VPC management]'
    get:
      consumes:
      - application/json
      description: Retrieve details of a specific Virtual Private Cloud (VPC).
      operationId: get-vpc
      parameters:
      - description: The name of the Connection to get a VPC for
        in: query
        name: ConnectionName
        required: true
        type: string
      - description: The name of the VPC to retrieve
        in: path
        name: Name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of the VPC
          schema:
            $ref: '#/definitions/spider.VPCInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Get VPC
      tags:
      - '[VPC management]'
  /vpc/{VPCName}/cspsubnet/{Id}:
    delete:
      consumes:
      - application/json
      description: Remove an existing CSP Subnet from a VPC.
      operationId: remove-csp-subnet
      parameters:
      - description: The name of the VPC
        in: path
        name: VPCName
        required: true
        type: string
      - description: The CSP Subnet ID to remove
        in: path
        name: Id
        required: true
        type: string
      - description: Request body for removing a CSP Subnet
        in: body
        name: ConnectionRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ConnectionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Result of the remove operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Remove CSP Subnet
      tags:
      - '[VPC management]'
  /vpc/{VPCName}/subnet:
    post:
      consumes:
      - application/json
      description: Add a new Subnet to an existing VPC.
      operationId: add-subnet
      parameters:
      - description: The name of the VPC to add the Subnet to
        in: path
        name: VPCName
        required: true
        type: string
      - description: Request body for adding a Subnet
        in: body
        name: AddSubnetRequest
        required: true
        schema:
          $ref: '#/definitions/spider.AddSubnetRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the VPC including the added Subnet
          schema:
            $ref: '#/definitions/spider.VPCInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Add Subnet
      tags:
      - '[VPC management]'
  /vpc/{VPCName}/subnet/{SubnetName}:
    delete:
      consumes:
      - application/json
      description: Remove an existing Subnet from a VPC.
      operationId: remove-subnet
      parameters:
      - description: The name of the VPC
        in: path
        name: VPCName
        required: true
        type: string
      - description: The name of the Subnet to remove
        in: path
        name: SubnetName
        required: true
        type: string
      - description: Request body for removing a Subnet
        in: body
        name: ConnectionRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ConnectionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Result of the remove operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Remove Subnet
      tags:
      - '[VPC management]'
schemes:
- http
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
